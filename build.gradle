apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

/*
Let's support at least 1.7

Cause: be/lukin/poeditor/gradle/POEditorPlugin : Unsupported major.minor version 52.0
warning: [options] bootstrap class path not set in conjunction with -source 1.7
*/
sourceCompatibility = 1.7
targetCompatibility = 1.7

// Artifact settings
group = 'be.lukin.poeditor'
version='0.3.5'
archivesBaseName = 'gradle'

def _name = 'Gradle Plugin for POEditor'
def _description = 'Gradle plugin to sync translations with POEditor'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'be.lukin.poeditor:poeditor-client:0.3.4'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'POEDitor Gradle Plugin', 'Implementation-Version': version
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    if(this.hasProperty('remote')) {
        sign configurations.archives
    }
}
    
publishing {
    publications {
        maven(MavenPublication) {
            groupId group
            artifactId archivesBaseName
            version version

            from components.java
        }
    }
}

// Username & password for Sonatype, stored in gradle.properties
def _ossrhUsername = this.properties['ossrhUsername']
def _ossrhPassword = this.properties['ossrhPassword']

uploadArchives {
    repositories {
        mavenDeployer {
            
            //use: gradle uploadArchives -Premote
            if(this.hasProperty('remote')){
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: _ossrhUsername, password: _ossrhPassword)
                }
            } else {
                repository(url: uri('./build/repo'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: _ossrhUsername, password: _ossrhPassword)
            }

            pom.project {
                name _name
                packaging 'jar'
                artifactId archivesBaseName
                description _description
                url 'https://github.com/lukin0110/poeditor-gradle/'
                inceptionYear '2015'

                scm {
                    url 'https://github.com/lukin0110/poeditor-gradle/'
                    connection 'scm:https://github.com/lukin0110/poeditor-gradle.git'
                    developerConnection 'scm:git://github.com/lukin0110/poeditor-gradle.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'lukin0110'
                        name 'Maarten Huijsmans'
                        email 'maarten@lukin.be'
                    }
                }
                
                issueManagement {
                    system 'GitHub issues'
                    url 'https://github.com/lukin0110/poeditor-gradle/issues'
                }
            }
        }
    }
}

// Force to download dependencies
// http://stackoverflow.com/questions/21814652/how-to-download-dependencies-in-gradle
task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

